# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: [master, develop]
  push:
    branches: [master, develop]
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.0.1]
        java: [adopt@1.8, adopt@1.11, adopt@1.16]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - name: Lint check with scalafmt
        run: sbt ++${{ matrix.scala }} scalafmtCheck

      - name: Tests
        run: sbt ++${{ matrix.scala }} 'coreJVM / test'

      - name: Generate JaCoCo report
        run: sbt ++${{ matrix.scala }} 'coreJVM / jacoco'

      - name: Publish coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: core/.jvm/target/scala-3.0.1/jacoco/report
          fail_ci_if_error: true

      - name: Build LaTeX report
        uses: xu-cheng/latex-action@v2
        with:
          root_file: ecscala-report.tex
          args: '-output-format=pdf -file-line-error -synctex=1 -halt-on-error -interaction=nonstopmode -shell-escape'
          working_directory: doc

      - name: Compress target directories
        run: tar cf targets.tar target core/.js/target core/.jvm/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.0.1]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (3.0.1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-3.0.1-${{ matrix.java }}

      - name: Inflate target directories (3.0.1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Setup environment variables
        run: |
          VERSION=`sbt -Dsbt.ci=true 'inspect actual version' | grep "Setting: java.lang.String" | cut -d '=' -f2 | tr -d ' '`
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          IS_SNAPSHOT=`if [[ "${VERSION}" =~ "-" ]] ; then echo "true" ; else echo "false" ; fi`
          echo "IS_SNAPSHOT=${IS_SNAPSHOT}" >> $GITHUB_ENV

      - name: Release to Sonatype
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          CI_CLEAN: sonatypeBundleClean
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
        run: sbt ++${{ matrix.scala }} ci-release

      - name: Release to Github Releases
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ env.IS_SNAPSHOT }}
          title: Release - Version ${{ env.VERSION }}
          files: |
            core/.jvm/target/scala-3.0.1/*.jar
            core/.jvm/target/scala-3.0.1/*.pom
            core/.js/target/scala-3.0.1/*.jar
            core/.js/target/scala-3.0.1/*.pom
            doc/ecscala-report.pdf